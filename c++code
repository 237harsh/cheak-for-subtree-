
    bool same(Node *T, Node *S){
       if(T == NULL && S == NULL){
           return true;
       }
       
       if(T && S ){
          
       
       
       if(T->data == S->data){
           bool left = same(T->left, S->left);
           bool right = same(T->right, S->right);
           return left && right;
       } 
       }
       return false;

    }
   
 
    bool isSubTree(Node* T, Node* S) 
    {
        if(T == NULL){
           return false;
       }
       if(S == NULL){
           return true;
       }


   
       

       if(same(T,S)){
           return true;
       }
        
     
       return isSubTree(T->left,S)||isSubTree(T->right,S);
    }
};


https://practice.geeksforgeeks.org/problems/check-if-subtree/1/?page=1&category[]=Tree&sortBy=submissions#
